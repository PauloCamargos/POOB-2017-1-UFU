/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import main.MyFrames.Ativos;
import main.MyFrames.Estoque;
import main.MyFrames.Fornecedores;
import main.MyFrames.NotasFiscais;

/**
 *
 * @author paulo
 */
public class padaria extends javax.swing.JFrame {

    /**
     * Creates new form padaria
     */
    public padaria() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktop = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMIArquivo = new javax.swing.JMenu();
        jIMSair = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jmConectar = new javax.swing.JMenuItem();
        jMEditar = new javax.swing.JMenu();
        jMIFornecedores = new javax.swing.JMenuItem();
        jMIAtivos = new javax.swing.JMenuItem();
        jMIEstoque = new javax.swing.JMenuItem();
        jMInf = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SW Manager");

        jDesktop.setPreferredSize(new java.awt.Dimension(700, 1000));

        javax.swing.GroupLayout jDesktopLayout = new javax.swing.GroupLayout(jDesktop);
        jDesktop.setLayout(jDesktopLayout);
        jDesktopLayout.setHorizontalGroup(
            jDesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1100, Short.MAX_VALUE)
        );
        jDesktopLayout.setVerticalGroup(
            jDesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
        );

        jMIArquivo.setText("Arquivo");

        jIMSair.setText("Sair");
        jIMSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jIMSairActionPerformed(evt);
            }
        });
        jMIArquivo.add(jIMSair);
        jMIArquivo.add(jSeparator1);

        jmConectar.setText("Conectar");
        jmConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmConectarActionPerformed(evt);
            }
        });
        jMIArquivo.add(jmConectar);

        jMenuBar1.add(jMIArquivo);

        jMEditar.setText("Editar");
        jMEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMEditarActionPerformed(evt);
            }
        });

        jMIFornecedores.setText("Fornecedores");
        jMIFornecedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIFornecedoresActionPerformed(evt);
            }
        });
        jMEditar.add(jMIFornecedores);

        jMIAtivos.setText("Ativos");
        jMIAtivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIAtivosActionPerformed(evt);
            }
        });
        jMEditar.add(jMIAtivos);

        jMIEstoque.setText("Estoque");
        jMIEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIEstoqueActionPerformed(evt);
            }
        });
        jMEditar.add(jMIEstoque);

        jMInf.setText("Notas Fiscais");
        jMInf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMInfActionPerformed(evt);
            }
        });
        jMEditar.add(jMInf);

        jMenuBar1.add(jMEditar);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktop, javax.swing.GroupLayout.DEFAULT_SIZE, 1100, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jDesktop, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jIMSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jIMSairActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jIMSairActionPerformed

    private void jMIAtivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIAtivosActionPerformed
        // TODO add your handling code here:
        Ativos ativos = new Ativos();
        jDesktop.add(ativos);
        ativos.setVisible(true);
    }//GEN-LAST:event_jMIAtivosActionPerformed

    private void jMIEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIEstoqueActionPerformed
        // TODO add your handling code here:
        Estoque estoque = new Estoque();
        jDesktop.add(estoque);
        estoque.setVisible(true);
    }//GEN-LAST:event_jMIEstoqueActionPerformed

    private void jMEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMEditarActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jMEditarActionPerformed

    private void jMIFornecedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIFornecedoresActionPerformed
        // TODO add your handling code here:
        Fornecedores forn = new Fornecedores();
        jDesktop.add(forn);
        forn.setVisible(true);    
        
    }//GEN-LAST:event_jMIFornecedoresActionPerformed

    private void jMInfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMInfActionPerformed
        // TODO add your handling code here:
        NotasFiscais nf = new NotasFiscais();
        jDesktop.add(nf);
        nf.setVisible(true);
    }//GEN-LAST:event_jMInfActionPerformed

    private void jmConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmConectarActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            // Definindo o Driver de conex達o
            Class.forName(driverDB);

            // Configurar conex達o:
            conn = DriverManager.getConnection(url, usuario, senha);// Recolhe as info do usuario e url
            JOptionPane.showMessageDialog(rootPane, "Conex達o estabelecida com sucesso!"); // Mostra esta message caso tudo funcioene
            estado_conexao = true;
        } catch (ClassNotFoundException ex) {
            // Abre uma nova janela mostrando o erro
            JOptionPane.showMessageDialog(rootPane, ex);
        } catch (SQLException ex1) {
            JOptionPane.showMessageDialog(rootPane, ex1);
        }
    }//GEN-LAST:event_jmConectarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(padaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(padaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(padaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(padaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new padaria().setVisible(true);
            }
        });
    }
    public ResultSet resultadoConsulta = null; // Guarda o resultado de um SELECT
    public String url = "jdbc:postgresql://localhost:5432/padaria"; // URL de conex達o com o BD
    public String usuario = "postgres"; // Usu叩rio de conex達o com o banco
    public String senha = "371254";  // senha de conex達o com o banco
    public Connection conn = null; // Guardar informa巽探es deconex達o com o banco
    public Statement stm = null; // Inst但ncia de enveto a ser executado pelo banco
    public String command; // Comando a ser executado pelo banco
    public String driverDB = "org.postgresql.Driver"; //
    public boolean estado_conexao = false;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane jDesktop;
    private javax.swing.JMenuItem jIMSair;
    private javax.swing.JMenu jMEditar;
    private javax.swing.JMenu jMIArquivo;
    private javax.swing.JMenuItem jMIAtivos;
    private javax.swing.JMenuItem jMIEstoque;
    private javax.swing.JMenuItem jMIFornecedores;
    private javax.swing.JMenuItem jMInf;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenuItem jmConectar;
    // End of variables declaration//GEN-END:variables
}
